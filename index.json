[
{
	"uri": "https://kdf.csco.cloud/concepts/",
	"title": "Concepts",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Concepts Learn about the KDF\n"
},
{
	"uri": "https://kdf.csco.cloud/",
	"title": "Home",
	"tags": [],
	"description": "",
	"content": " Kubernetes Development Framework (KDF) The Kubernetes Development Framework (KDF) is a set of patterns, tools, and deployment packages. It is not a platform. It is a toolkit and a way of doing things.\nVisit Concepts for more information, or skip to the Quickstart\n"
},
{
	"uri": "https://kdf.csco.cloud/quickstart/01-install-the-kdk/",
	"title": "Install the KDK",
	"tags": [],
	"description": "",
	"content": " Select your Operating System: osx\u0026nbsp;win10\u0026nbsp;    $(document).ready(toggleOnloadFunction(\"os\", [\"osx\",\"win10\"])); function toggleOnloadFunction(itemGroup, itemList) { for (i of itemList) { if (i == \"osx\") { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } } function toggleButtonFunction(itemGroup, itemName, itemList) { for (i of itemList) { if (i == itemName) { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } }  The kdk repository may be used to create a docker container with all of the tools that one would typically use in order to develop and operate kubernetes clusters.\nThe following steps are here to help you install the Kubernetes Development Kit (KDK)\nThe KDK is compatible with OSX, Windows10, and Linux. However, Linux is mostly untested except when using the KDK to develop itself running \u0026lsquo;docker-in-docker\u0026rsquo;. The instructions for Linux are not yet included, but should be similar to that of OSX.\n Install Prerequisites Select your Operating System: osx\u0026nbsp;win10\u0026nbsp;    $(document).ready(toggleOnloadFunction(\"os\", [\"osx\",\"win10\"])); function toggleOnloadFunction(itemGroup, itemList) { for (i of itemList) { if (i == \"osx\") { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } } function toggleButtonFunction(itemGroup, itemName, itemList) { for (i of itemList) { if (i == itemName) { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } }  Windows10 Only: prerequisites installation requires the usage of Powershell as the adminstrative user.\n  Install package management system # Open a Terminal # Spotlight Search Command[⌘]-Space[\u0026#34; \u0026#34;] -\u0026gt; Terminal  # Install HomeBrew Package Management System # https://brew.sh/ /usr/bin/ruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026#34;  # Open the Powershell Terminal as Administrator # Windows Search -\u0026gt; Windows PowerShell (Right click \u0026#34;Run as Administrator\u0026#34;)  # Install Chocolatey Package Management System # https://chocolatey.org/ Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;)) \nInstall utils # Install utils brew install git brew cask install keybase \n# Install utils choco.exe install -y openssh git curl sudo keybase  Uninstall potentially conflicting packages # Uninstall potentially conflicting packages brew uninstall vagrant virtualbox \n# Uninstall potentially conflicting packages choco.exe uninstall vagrant virtualbox  Install Docker # Install Docker for Mac open https://docs.docker.com/docker-for-mac/release-notes/ \n# Install Docker for Windows start https://docs.docker.com/docker-for-windows/release-notes/  Configure Prerequisites Select your Operating System: osx\u0026nbsp;win10\u0026nbsp;    $(document).ready(toggleOnloadFunction(\"os\", [\"osx\",\"win10\"])); function toggleOnloadFunction(itemGroup, itemList) { for (i of itemList) { if (i == \"osx\") { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } } function toggleButtonFunction(itemGroup, itemName, itemList) { for (i of itemList) { if (i == itemName) { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } }  Keybase Keybase is optionally required to make sharing secrets with other people easier. A user may be added to a keybase team, at which point the team\u0026rsquo;s secret files are exposed under the local filesystem at \u0026rsquo;/keybase\u0026rsquo;\u0026lsquo;k:\u0026rsquo;. Scripts and automation may then locate secrets within the keybase filesystem, which is mounted at the same location on everyone\u0026rsquo;s machine. Upon kdk init, the KDK will prompt you to mount the host \u0026rsquo;/keybase\u0026rsquo;\u0026lsquo;k:\u0026rsquo; directory within the kdk docker container at \u0026lsquo;/keybase\u0026rsquo;.\nConfigure Keybase # Open Keybase # Spotlight Search Command[⌘]-Space[\u0026#34; \u0026#34;] -\u0026gt; keybase  # Enable Keybase Files # Settings -\u0026gt; Files -\u0026gt; Enable Keybase in Finder  # Verify that KeybaseFS has been mounted on your system ls /keybase \n# Open \u0026#34;Git Bash\u0026#34; # Windows Search -\u0026gt; keybase  # Enable Keybase Files # Settings -\u0026gt; Files -\u0026gt; Enable Keybase in Explorer  # Verify that KeybaseFS has been mounted on your system dir k:  Be a good Keybase citizen, and ensure you are registered on keybase with your full name and at least one verification. Ask your team lead to add you to any relevant keybase teams to gain access to their files under \u0026rsquo;/keybase/team/\u0026lt;team-name\u0026gt;\u0026lsquo;\u0026lsquo;k:/team/\u0026lt;team-name\u0026gt;\u0026lsquo;.\nInstall and Run the KDK Select your Operating System: osx\u0026nbsp;win10\u0026nbsp;    $(document).ready(toggleOnloadFunction(\"os\", [\"osx\",\"win10\"])); function toggleOnloadFunction(itemGroup, itemList) { for (i of itemList) { if (i == \"osx\") { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } } function toggleButtonFunction(itemGroup, itemName, itemList) { for (i of itemList) { if (i == itemName) { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").show(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"PaleGreen\") } else { $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"']\").hide(); $(\"[item-group='\"+itemGroup+\"'][item='\"+i+\"-button']\").css(\"background-color\", \"\") } } }  Windows 10 Only: After prerequisites installation, all KDK operations must occur within the \u0026ldquo;Git Bash\u0026rdquo; shell, instead of the PowerShell.\n  # Open a Terminal # Spotlight Search Command[⌘]-Space[\u0026#34; \u0026#34;] -\u0026gt; Terminal  # Open \u0026#34;Git Bash\u0026#34; # Windows Search -\u0026gt; Git Bash  # Install the KDK curl -sSL https://raw.githubusercontent.com/cisco-sso/kdk/master/files/install | bash # Print out the KDK Usage kdk # Configure the KDK kdk init # Run and Connect the KDK kdk ssh At this point, running \u0026lsquo;kdk ssh\u0026rsquo; at any time will connect you to the KDK.\nPost-Install Configuration Adding keys to source control This is optional if you are using ssh-agent, which the KDK automatically forwards. Otherwise, you may directly configure the pre-generated ssh key which is used to connect to the KDK, within each source control provider.\nAdd content of ssh public key ~/.kdk/ssh/id_rsa.pub\n To your Github Account Keys To your Bitbucket Server https:///bitbucket/plugins/servlet/ssh/account/keys  "
},
{
	"uri": "https://kdf.csco.cloud/concepts/what-is-the-kdf/",
	"title": "What Is the KDF?",
	"tags": [],
	"description": "",
	"content": "The Kubernetes Development Framework (KDF) is a set of patterns, tools, and deployment packages. It is not a platform. It is a toolkit and a way of doing things.\nNew users of Kubernetes may use the KDF to quickly create a cluster with basic services (e.g. logging, monitoring, HTTPS ingress, LetsEncrypt SSL certs) by using vetted and tested deployment packages, all while conforming to what we perceive as healthy patterns.\nExperienced users of Kubernetes may use the KDF in order to make their lives easier and work more efficiently. For example:\n Members of a team often spend hours individually setting up and maintaining their development and operations environments. In order to work effectively, they should all work in a common environment, using the same list of tools, at the same versions. We provide a cross-platform, lightweight, immutable cli tool and docker image that serves as this development environment called the Kubernetes Development Kit (KDK).\n The platform-deploy code pattern allows a user to enter a \u0026ldquo;cluster\u0026rdquo; directory and automatically have all tools pre-configured for that specific enviroment. Thus, by opening multiple shells to different \u0026ldquo;cluster\u0026rdquo; directories the user may be configured to operate on several clusters simultaneously. This sounds simple, however it is not possible with \u0026ldquo;kubectl\u0026rdquo; today because only a single, global kube-context may be active at once. It is also difficult with with other tools (e.g. aws-cli if working across AWS accounts). Our \u0026ldquo;platform-deploy\u0026rdquo; code pattern relies on direnv which is pre-configured in the Kubernetes Development Kit (KDK), to auto-magically set enviroment variables upon entering a cluster directory and pull secrets from a keybase team to properly configure all of the cloud tools such as kubectl, helm, aws-cli, etc.\n  "
},
{
	"uri": "https://kdf.csco.cloud/quickstart/",
	"title": "Quickstart",
	"tags": [],
	"description": "",
	"content": " Chapter 2 Quickstart Create a local kubernetes cluster, operate it with tools in the (KDK), access it with the \u0026ldquo;platform-deploy\u0026rdquo; pattern, and finally install a set of basic services on the kubernetes cluster.\n"
},
{
	"uri": "https://kdf.csco.cloud/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://kdf.csco.cloud/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]