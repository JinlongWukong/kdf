<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes Development Framework (KDF) on KDF</title>
    <link>https://kdf.csco.cloud/</link>
    <description>Recent content in Kubernetes Development Framework (KDF) on KDF</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Oct 2018 21:02:06 +0000</lastBuildDate>
    
	<atom:link href="https://kdf.csco.cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Backlog</title>
      <link>https://kdf.csco.cloud/backlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/backlog/</guid>
      <description>Roadmap Priorities  [Done] Dockerized KDK [In Progress] KDF Docs [In Progress] Multi-cluster DRY Configuration  e.g. How to manage highly redundant umbrella charts or mh configs across many kubernetes clusters. Next generation of mh technology, could be something else  Kubernetes Individual Identity (Security)  OIDC Provider Integration  Kubernetes RBAC (Security) Kubernetes Audit logging (Security) Multi-tenant Kubernetes Clusters  Per-region Kubernetes clusters Individual Namespaces per project.  Service Mesh (Security)  East/West (intra-cluster)  e.</description>
    </item>
    
    <item>
      <title>Best Practices</title>
      <link>https://kdf.csco.cloud/kubernetes/best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/kubernetes/best-practices/</guid>
      <description>Always Set Pod Memory/Cpu Limits and Requests The kubernetes scheduler is responsible for scheduling pods across the cluster of worker machines. The scheduler relies on every pod having mem/cpu limits set, so that it can calculate if a node is too full to schedule more pods on, or yet has enough spare capacity to assign a particular pod. If a pod has no mem/cpu limits set, then the pod is infinitesimally small according to the scheduler and thus can fit on any worker node.</description>
    </item>
    
    <item>
      <title>Deploying</title>
      <link>https://kdf.csco.cloud/kubernetes/deploying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/kubernetes/deploying/</guid>
      <description>Intro If you want to install kubernetes on anything but your local machine, but have never used kubernetes&amp;hellip; stop. There are countless technologies which may be used to deploy Kubernetes in all sorts of clouds and on-premise setups. People get stuck on the installation, and the resulting kubernetes clusters are often divergent from what kubernetes was meant to be. Worse yet, a novice may not notice. For example, on-premise deployments of kubernetes, given the constraints of a corporate datacenter, may be missing persistent storage and loadbalancers which most applications built for kubernetes typically depend on.</description>
    </item>
    
    <item>
      <title>Deployment Packages</title>
      <link>https://kdf.csco.cloud/deployment-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/deployment-packages/</guid>
      <description>Deployment Packages (Helm Charts) (components list)
All changes to deployment packages were upstreamed.
How to generate parts of this doc: git checkout git@github.com:cisco-sso/framework-deploy.git cd framework-deploy/apps ls | awk -F&#39;-&#39; &#39;{OFS=&#34;-&#34;;NF--;print &#34;- &#34; $0;}&#39;|sort | uniq   cassandra cert-manager cert-manager-configs chaoskube cluster-autoscaler consul docker-registry drone elasticsearch elasticsearch-curator elasticsearch-exporter envoy external-dns filebeat filebeat-elasticsearch grafana hackmd kafka kafka-manager kafka-rest kafka-schema-registry kibana logstash metallb metrics-server minio mysql nginx-ingress nginx-reverse-proxy oauth2-proxy openebs prometheus raw redis redis-ha stolon ureplicator vault  </description>
    </item>
    
    <item>
      <title>Getting Started &gt; Linux</title>
      <link>https://kdf.csco.cloud/getting-started/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/getting-started/linux/</guid>
      <description> Linux is not currently supported.
However, it should work. We just haven&amp;rsquo;t worked out the documentation for it.
The Mac instructions may help you get KDF running on Linux.
 </description>
    </item>
    
    <item>
      <title>Getting Started &gt; Mac</title>
      <link>https://kdf.csco.cloud/getting-started/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/getting-started/mac/</guid>
      <description>Intro This getting started guide will walk you through:
 Installing Docker and Kubernetes on your local machine.
 Running a pre-configured Kubernetes development/operations environment which standardizes a team on a common toolset.
 Introducing the &amp;ldquo;framework-deploy&amp;rdquo; pattern which enables teams to easily manage and operate multiple clusters and configurations.
 Deploying a few basic services in Kubernetes such as logging, monitoring, and dashboards.
 Accessing the newly deployed basic service dashboards and introducing introduce their usage.</description>
    </item>
    
    <item>
      <title>Getting Started &gt; Windows</title>
      <link>https://kdf.csco.cloud/getting-started/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/getting-started/windows/</guid>
      <description>Intro This getting started guide will walk you through:
 Installing Docker and Kubernetes on your local machine.
 Running a pre-configured Kubernetes development/operations environment which standardizes a team on a common toolset.
 Introducing the &amp;ldquo;framework-deploy&amp;rdquo; pattern which enables teams to easily manage and operate multiple clusters and configurations.
 Deploying a few basic services in Kubernetes such as logging, monitoring, and dashboards.
 Accessing the newly deployed basic service dashboards and introducing introduce their usage.</description>
    </item>
    
    <item>
      <title>Helm Charts</title>
      <link>https://kdf.csco.cloud/kubernetes/helm-charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/kubernetes/helm-charts/</guid>
      <description>Selecting a Helm Chart  Search for your component using google (e.g. &amp;ldquo;helm chart elasticsearch&amp;rdquo;) Often you will find many charts in for a component. For example, elasticsearch can be found in 3 popular helm chart repositories.  Official Kubernetes Charts Bitnami Clockworksoul  Read through the values and templates of each chart, and understand how they differ. Test the most promising charts  In general, favor the charts in the Official Kubernetes Charts because they are the most actively contributed to.</description>
    </item>
    
    <item>
      <title>Kubernetes Training Resources</title>
      <link>https://kdf.csco.cloud/training/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/training/</guid>
      <description> Docker  Getting Started:  https://docs.docker.com/get-started/  Official Training Link  https://training.docker.com/  Official Docker Self-Paced Training and Videos  https://training.play-with-docker.com/   Kubernetes  A Comic-Book Intro to Kubernetes  https://cloud.google.com/kubernetes-engine/kubernetes-comic/  Official Kubernetes Tutorials  https://kubernetes.io/docs/tutorials/  Kubernetes Concepts  https://kubernetes.io/docs/concepts/  (Free!) Classes  https://www.cncf.io/certification/training/   Helm  Quickstart  https://docs.helm.sh/using_helm/#quickstart   </description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://kdf.csco.cloud/kubernetes/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/kubernetes/monitoring/</guid>
      <description>Monitoring Prometheus
Alerting AlertManager
Dashboards Grafana</description>
    </item>
    
    <item>
      <title>Patterns</title>
      <link>https://kdf.csco.cloud/patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/patterns/</guid>
      <description> Development Environment Framework-Deploy Custom Chart Repository Monitoring </description>
    </item>
    
    <item>
      <title>Team</title>
      <link>https://kdf.csco.cloud/team/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/team/</guid>
      <description>TODO ## Agreements https://rfc.zeromq.org/spec:22/C4/  Branch/Merge Strategy Github Flow / Fork &amp;amp; Pull (RECOMMENDED) Modern software development keeps a stable master branch. Releases are tagged directly off of the master branch. This requires a solid automated test suite and enables quick release cycles. If your project matches these characteristics use Github Flow.
Gitflow Legacy software development typically uses release branches, which take time to stabilize, typically due to significant manual test bottlenecks.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://kdf.csco.cloud/kubernetes/testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/kubernetes/testing/</guid>
      <description>Chaoskube Litmus Test Delete all nodes</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://kdf.csco.cloud/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kdf.csco.cloud/tools/</guid>
      <description> Keybase Kubernetes Development Kit kdk (components list: autogen)
framework-deploy mh </description>
    </item>
    
  </channel>
</rss>